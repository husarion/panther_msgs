name: Release panther_msgs repository

on:
    workflow_dispatch:
        inputs:
            release-tag:
                description: Release tag
                required: true
            release-name:
                description: Release name
                required: true
    repository_dispatch:

jobs:
    release:
        name: Release repository
        runs-on: ubuntu-22.04
        # outputs:
            # new_version: ${{ steps.release.outputs.new_version }}
        steps:
            - name: checkout
              uses: actions/checkout@v2
            - name: create release
              id: create_release
              uses: at-wat/catkin-release-action@v1
              with:
                version: ${{ github.event.inputs.release-tag }}
                git_user: action-bot
                git_email: action-bot@action-bot.com
                github_token: ${{ secrets.GITHUB_TOKEN }}
            - name: open pull-request
              uses: repo-sync/pull-request@v2
              with:
                source_branch: ${{ steps.create_release.outputs.created_branch }}
                destination_branch: ros2-devel
                pr_title: Release ${{ steps.create_release.outputs.version}}
                pr_body: close \#${{ github.event.issue.number }}
                github_token: ${{ secrets.GITHUB_TOKEN }}
##########
        # steps:
        #     - name: Checkout repository
        #       uses: actions/checkout@v4

        #     - name: Prepare release
        #       id: prepare-release
        #       uses: husarion-ci/action-catkin-release@v0.1.4
        #       with:
        #           bump: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release-tag || github.event_name == 'repository_dispatch' && github.event.client_payload['release-tag'] }}
        #           github_token: ${{ secrets.GITHUB_TOKEN }}
        #           git_user: action-bot
        #           git_email: action-bot@action-bot.com
##########
            # - name: Create release
            #   uses: softprops/action-gh-release@v1
            #   if: ${{needs.prepare-arguments.outputs.create_release == 'yes'}}
            #   needs: prepare-release
            #   with:
            #       tag_name: ${{ steps.bump-semver.outputs.new_version }}
            #       generate_release_notes: "true"
            #       token: ${{ secrets.WORKFLOW_PAT }}
            #       draft: "false"
            #       name: "RCP Pico Board Micropython firmware ${{ steps.bump-semver.outputs.new_version }}"
            #       files: |
            #           pico_upy_fw.zip
